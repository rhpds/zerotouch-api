# Check with the latest version of the OpenAPI spec at https://swagger.io/specification/
openapi: 3.1.0
info:
  title: Swagger Zero Touch API - OpenAPI 3.0
  description: API to manage Catalog Items as a part of Zero Touch POC
  version: 1.0.0
  
servers:
  - url: http://localhost:8080
  
tags:
  - name: Catalog Items
    description: Getting information about Catalog Items
  - name: Provisioning
    description: Managing environment provisioning
  - name: Admin
    description: Administration
components:
  schemas:
    CatalogItem:
      type: object
      properties:
        id:
          type: string
        Name:
          type: string
        DisplayName:
          type: string
        Description:
          type: string
        DescriptionFormat:
          type: string
        Provider:
          type: string
      required:
        - id
        - Name
        - DisplayName
        - Description
        - DescriptionFormat
        - Provider
    ProvisionDetails:
      type: object
      properties:
        Name:
          type: string
        ProviderName:
          type: string
        Purpose:
          type: string
        Start:
          type: string
          format: date-time
        Stop:
          type: string
          format: date-time
        End:
          type: string
          format: date-time
      required:
       - Name
       - ProviderName
       - Purpose
    ProvisionStatus:
      type: object
      properties:
        GUID:
          type: string
        randomString:
          type: string
        runtimeDefault:
          type: string
        runtimeMaximum:
          type: string
        state:
          type: string
      required:
        - GUID
        - randomString
        - runtimeDefault
        - runtimeMaximum
        - state
    Status:
      type: object
      properties:
        status:
          type: string
          enum:
            - OK
            - ERROR
        message:
          type: string
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
      required:
        - code
        - message

paths:
  /health:
    get:
      tags:
        - Admin
      summary: Health check
      description: Health check
      operationId: health
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'

  /catalogItems:
    get:
      tags:
        - Catalog Items
      summary: List all Catalog Items
      description: List all Catalog Items
      operationId: listCatalogItems
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogItem'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /catalogItems/{name}:
    get:
      tags:
        - Catalog Items
      summary: Get a Catalog Item
      description: Get a Catalog Item by Name
      operationId: getCatalogItem
      parameters:
        - name: name
          in: path
          description: Catalog Item Name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItem'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /provision:
    post:
      tags:
        - Provisioning
      summary: Create new provision
      description: Create new provision
      operationId: createProvision
      requestBody:
        description: Provision details to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionDetails'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: Location of the new provision
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionStatus'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /provision/{name}: 
    get:
      tags:
        - Provisioning
      summary: Get provision status
      description: Get provision status by name
      operationId: getProvisionStatus
      parameters:
        - name: name
          in: path
          description: Provision name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionStatus'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Provisioning
      summary: Destroy provision
      description: Destroy provision by name
      operationId: deleteProvision
      parameters:
        - name: name
          in: path
          description: Provision name
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'